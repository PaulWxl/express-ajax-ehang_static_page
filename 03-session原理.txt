5.3 Session 认证机制
1.[ HTTP 协议] 的 [无状态性]
了解  [HTTP 协议的无状态性] 是 [进一步学习 Session 认证机制的必要前提] 。
HTTP 协议的无状态性，指的是 [客户端] 的 [每次 HTTP 请求] 都是独立的， [连续多个请求之间没有直接的关系] ， [服务器] 不会 [主动保留] 每次 [HTTP 请求的状态] 。

2. 如何突破 HTTP 无状态的限制
对于超市来说，为了方便收银员在进行结算时给 VIP 用户打折，[超市可以为每个VIP 用户发放会员卡] 。
注意：现实生活中的 [会员卡身份认证方式] ，在 [Web 开发中的专业术语叫做 Cookie ] 。- 当你登录成功之后，服务器会向客户端发送一个 Cookie ， 这个 Cookie 就是一个身份认证标识。

3. 什么是Cookie
Cookie 是 [存储在用户浏览器] 中的一段 [不超过 4 KB 的字符串](Cookie 是字符串) 。它由 [一个名称（Name）、一个值（Value）和其它几个用于控制 Cookie 有效期（Expires）、安全性、使用范围的可选属性] 组成。
[不同域名] 下的 Cookie 各自 [独立] ，每当 [客户端发起请求] 时，会 [自动] 把 [当前域名] 下 [所有未过期] 的 Cookie 一同 [发送到服务器] 。- 不同域名下的 Cookie 不能互相访问。
Chrome 浏览器 - [应用] - [Cookie] - 展开 - Cookie 其实就是键值对 - [名称Name - 值Value] 
Cookie的几大特性：
①自动发送
②域名独立
③过期时限 - 只有在有效期内的 Cookie 在可以被正常地发送给服务器。 
④ 4KB 限制


4. Cookie 在身份认证中的作用
[客户端] 第一次请求 [服务器] 的时候，[服务器] 通过 [响应头] 的形式，向 [客户端] 发送一个 [身份认证的 Cookie] ，[客户端] 会 [自动将 Cookie 保存在浏览器中] 。
随后，当 [客户端浏览器每次请求服务器] 的时候，浏览器会 [自动将身份认证相关的Cookie] ，通过 [请求头] 的形式发送给服务器，服务器即可 [验明客户端的身份] 。


5. Cookie 不具有安全性
由于 Cookie 是 [存储在浏览器] 中的，而且 [浏览器] 也提供了 [读写 Cookie 的 API]  ，因此 [Cookie 很容易被伪造] ，不具有安全性。因此 [不建议服务器将重要的隐私数据，通过 Cookie 的形式发送给浏览器] 。
注意：千万 [不要使用 Cookie 存储重要且隐私的数据] ！比如 [用户的身份信息、密码] 等。


6. 提高身份认证的安全性
为了防止客户伪造会员卡，收银员在 [拿到客户出示的会员卡之后] ，可以在 [收银机上进行刷卡认证] 。只有 [收银机确认存在] (在服务器端判断 Cookie 是否正确) 的会员卡，才能被正常使用。这种 [“会员卡+刷卡认证”] 的设计理念，就是 [Session 认证机制] 的精髓。


7. Session的工作原理
见图。